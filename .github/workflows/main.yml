
name: test push tag

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
        #env:
        #  HOME: /home/runner/work/opde

jobs:
  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
      dataDash: ${{steps.var.outputs.dataDash}}
      dataDot: ${{steps.var.outputs.dataDot}}
      tag: ${{steps.var.outputs.tag}}
    steps:
    - id: step1
      run: echo "::set-output name=test::hello"
    - id: step2
      run: echo "::set-output name=test::world"
    - id: var
      run: |-
        dataDot=$(date +'%y.%m')
        echo $dataDot
        echo "::set-output name=dataDot::$dataDot"
        dataDash=$(date +'%y-%m')
        echo $dataDash
        echo "::set-output name=dataDash::$dataDash"
        tag=v$dataDot.${{github.run_number}}
        echo $tag
        echo "::set-output name=tag::$tag"
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
    - run: echo ${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}} ${{needs.job1.outputs.dateDash}} ${{needs.job1.outputs.tag}} 
  build:
    runs-on: ubuntu-18.04

    steps:
      - run: echo ${{github.event_name}}
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # NOTE @v2 uses the token as an auth http header. Set it to
          # a Personal Access Token instead of secrets.GITHUB_TOKEN
          # so that tag pushes trigger repo push events.
          token: ${{ secrets.RELEASE_TOKEN }}
      - uses: actions/upload-artifact@master
        with:
          name: artifact-package-1
          path: ./README.md
      - uses: actions/upload-artifact@master
        with:
          name: artifact-package-2
          path: ./README.md
      - uses: actions/upload-artifact@master
        with:
          name: artifact-log-1
          path: ./README.md
      - uses: elonh/download-artifact-regexp@master
        with:
          pattern: ^artifact-log-1$
          path: ./debug
      # - run: sleep 30
      # - uses: mxschmitt/action-tmate@v1
      #   if: always()
      - name: push tag
        id: tag
        run: |
          # sudo apt install -y tree
          tag="${{github.ref}}"
          [[ $tag == refs/heads/* ]] && tag="snapshot"
          echo "::set-output name=tagName::$tag"
          # echo "123"
          # # echo ${{runner.temp}}
          # # tree /home/runner
          # echo "456"
          # # echo ${{github.actor}}
          # # echo ${{github.repository}}
          echo "runid: ${{github.run_id}}"
          echo "run_number: ${{github.run_number}}"
          echo "job.container.id: ${{job.container.id}}"
          #########################
          sudo apt install -y python3-pycurl
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git checkout -b tt-issues-branch ${{github.sha}}
          ./issues-create -cpo ${{github.repository}} -l latest/logs -o issues.json
          git add issues.json
          git commit -m "issues from tt"
          git tag tt-issues --force
          git push "https://${{github.actor}}:${{secrets.RELEASE_TOKEN}}@github.com/${{github.repository}}.git" tt-issues --force
      # - uses: ays()
      - run: |
          echo "${{steps.tag.outputs.tagName}}"
      - uses: meeDamian/github-release@2.0
        with:
          token: ${{ secrets.RELEASE_TOKEN }}
          tag: snapshot
          name: Release snapshot ${{github.sha}}
          body: |
            this is body.
          allow_override: true
      # - name: Push changes
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.RELEASE_TOKEN }}
      #     force: true
      #     tags: true
      #     branch: latest-tag
      # - uses: svenstaro/upload-release-action@v1-release
      #   with:
      #     repo_token: ${{ secrets.RELEASE_TOKEN }}
      #     file: ./refs.txt
      #     tag: snapshot
      #     file_glob: true
      #     overwrite: true
      # - uses: mxschmitt/action-tmate@v1
      #   if: always()
      # - name: release
      #   uses: actions/create-release@latest
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      #   with:
      #     tag_name: latest-tag
      #     release_name: Release ${{ github.ref }}
      #     body: |
      #       SHA: ${{github.sha}}
      #       Changes in this Release
      #       - First Change
      #       - Second Change
      #     draft: false
      #     prerelease: false


  # release:
  #   if: startsWith(github.ref, 'refs/tags/')
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - name: push tag
  #       run: |
  #         echo ${{github.ref}}
  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@latest
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
  #       with:
  #         tag_name: ${{ github.ref }}
  #         release_name: Release ${{ github.ref }}
  #         body: |
  #           Changes in this Release
  #           - First Change
  #           - Second Change
  #         draft: false
  #         prerelease: false
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Create Release Notes
  #       uses: docker://decathlon/release-notes-generator-action:2.0.1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         FILENAME_PREFIX: MyMilestone
  #     # - uses: mxschmitt/action-tmate@v1
  #     - uses: mxschmitt/action-tmate@v1
  #       if: always()
  build2:
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: push tag
        id: tag
        run: |
          # sudo apt install -y tree
          tag="${{github.ref}}"
          [[ $tag == refs/heads/* ]] && tag="snapshot"
          echo "::set-output name=tagName::$tag"
          echo "runid: ${{github.run_id}}"
          echo "run_number: ${{github.run_number}}"
          echo "job.container.id: ${{job.container.id}}"
          echo "job.status: ${{job.status}}"
          echo "github.workspace: ${{github.workspace}}"
          echo "recursive test: ${{ hashFiles('./README.md') }}"
      - run: |
          # sudo apt install -y tree
          tag="${{github.ref}}"
          [[ $tag == refs/heads/* ]] && tag="snapshot"
          echo "::set-output name=tagName::$tag"
          echo "runid: ${{github.run_id}}"
          echo "run_number: ${{github.run_number}}"
          echo "job.container.id: ${{job.container.id}}"
