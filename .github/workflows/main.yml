
name: test push tag

on:
  push:
    branches:
      - master
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/upload-artifact@master
        with:
          name: artifact1
          path: ./README.md
      - name: push tag
        run: |
          echo ${{github.actor}}
          echo ${{github.repository}}
          sudo apt install libcurl4-openssl-dev libssl-dev
          pip3 install setuptools 
          pip3 install pycurl
          ./.github/del-artifact --repo ${{github.repository}} --runid ${{github.run_id}} --user ${{github.actor}} --token ${{secrets.GITHUB_TOKEN}}
          echo ${{github.ref}}
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          echo "${{github.sha}}" > refs.txt
          git add refs.txt
          git commit -m "Add changes ${{github.sha}}" -a
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
          tags: true
          branch: latest-tag
      - uses: mxschmitt/action-tmate@v1
        if: always()
      # - name: release
      #   uses: actions/create-release@latest
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      #   with:
      #     tag_name: latest-tag
      #     release_name: Release ${{ github.ref }}
      #     body: |
      #       SHA: ${{github.sha}}
      #       Changes in this Release
      #       - First Change
      #       - Second Change
      #     draft: false
      #     prerelease: false


  # release:
  #   if: startsWith(github.ref, 'refs/tags/')
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - name: push tag
  #       run: |
  #         echo ${{github.ref}}
  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@latest
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
  #       with:
  #         tag_name: ${{ github.ref }}
  #         release_name: Release ${{ github.ref }}
  #         body: |
  #           Changes in this Release
  #           - First Change
  #           - Second Change
  #         draft: false
  #         prerelease: false
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Create Release Notes
  #       uses: docker://decathlon/release-notes-generator-action:2.0.1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         FILENAME_PREFIX: MyMilestone
  #     # - uses: mxschmitt/action-tmate@v1
  #     - uses: mxschmitt/action-tmate@v1
  #       if: always()
